Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_mulhi3.o)
                              ./main.o (__mulhi3)
/usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_divmodsi4.o)
                              ./main.o (__divmodsi4)
/usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn85.o (exit)
/usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_copy_data.o)
                              ./usbdrv/usbdrv.o (__do_copy_data)
/usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_clear_bss.o)
                              ./usbdrv/usbdrv.o (__do_clear_bss)
/usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_udivmodsi4.o)
                              /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_divmodsi4.o) (__udivmodsi4)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(malloc.o)
                              ./main.o (malloc)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(strcpy.o)
                              ./main.o (strcpy)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(eerd_byte_attiny85.o)
                              ./main.o (__eerd_byte_tn85)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(eewr_byte_attiny85.o)
                              ./main.o (__eewr_byte_tn85)

Allocating common symbols
Common symbol       size              file

fsk_tune            0x1               ./main.o
usbTxBuf            0xb               ./usbdrv/usbdrv.o
timer               0x4               ./main.o
dit_length          0x2               ./main.o
cur_mode            0x1               ./main.o
next_state          0x1               ./main.o
tx_on               0x1               ./main.o
__brkval            0x2               /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(malloc.o)
cur_state           0x1               ./main.o
usbDeviceAddr       0x1               ./usbdrv/usbdrv.o
usbRxToken          0x1               ./usbdrv/usbdrv.o
usbInputBufOffset   0x1               ./usbdrv/usbdrv.o
usbMsgPtr           0x2               ./usbdrv/usbdrv.o
usbRxLen            0x1               ./usbdrv/usbdrv.o
usbNewDeviceAddr    0x1               ./usbdrv/usbdrv.o
usbCurrentTok       0x1               ./usbdrv/usbdrv.o
__flp               0x2               /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(malloc.o)
usbConfiguration    0x1               ./usbdrv/usbdrv.o
usbRxBuf            0x16              ./usbdrv/usbdrv.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn85.o
LOAD ./usbdrv/oddebug.o
LOAD ./usbdrv/usbdrv.o
LOAD ./usbdrv/usbdrvasm.o
LOAD ./main.o
LOAD /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xdda
 *(.vectors)
 .vectors       0x00000000       0x1e /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn85.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x0000001e       0x4c ./usbdrv/usbdrv.o
                0x0000001e                usbDescriptorString0
                0x00000022                usbDescriptorStringVendor
                0x00000034                usbDescriptorStringDevice
                0x00000046                usbDescriptorDevice
                0x00000058                usbDescriptorConfiguration
 .progmem.data  0x0000006a       0x3b ./main.o
                0x0000006a                morsechar
                0x000000a6                . = ALIGN (0x2)
 *fill*         0x000000a5        0x1 00
                0x000000a6                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000a6        0x0 linker stubs
 *(.trampolines*)
                0x000000a6                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000a6                __ctors_start = .
 *(.ctors)
                0x000000a6                __ctors_end = .
                0x000000a6                __dtors_start = .
 *(.dtors)
                0x000000a6                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000a6        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn85.o
                0x000000a6                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000a6        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn85.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000b2       0x16 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_copy_data.o)
                0x000000b2                __do_copy_data
 .init4         0x000000c8       0x10 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_clear_bss.o)
                0x000000c8                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000d8        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn85.o
 *(.init9)
 *(.text)
 .text          0x000000dc        0x2 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn85.o
                0x000000dc                __vector_12
                0x000000dc                __bad_interrupt
                0x000000dc                __vector_6
                0x000000dc                __vector_3
                0x000000dc                __vector_11
                0x000000dc                __vector_13
                0x000000dc                __vector_7
                0x000000dc                __vector_5
                0x000000dc                __vector_4
                0x000000dc                __vector_9
                0x000000dc                __vector_2
                0x000000dc                __vector_8
                0x000000dc                __vector_14
 .text          0x000000de        0x0 ./usbdrv/oddebug.o
 .text          0x000000de      0x1ee ./usbdrv/usbdrv.o
                0x000000de                usbPoll
                0x000002be                usbInit
 .text          0x000002cc      0x2fa ./usbdrv/usbdrvasm.o
                0x000002cc                usbCrc16
                0x000002f6                usbCrc16Append
                0x000002fe                usbMeasureFrameLength
                0x00000324                __vector_1
 .text          0x000005c6      0x4d2 ./main.o
                0x000005c6                __vector_10
                0x00000610                usbFunctionSetup
                0x00000678                usbEventResetReady
                0x00000702                set_wpm
                0x0000071c                main
 .text          0x00000a98        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_mulhi3.o)
 .text          0x00000a98        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_divmodsi4.o)
 .text          0x00000a98        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
 .text          0x00000a98        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_copy_data.o)
 .text          0x00000a98        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_clear_bss.o)
 .text          0x00000a98        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_udivmodsi4.o)
 .text          0x00000a98        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(malloc.o)
 .text          0x00000a98        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(strcpy.o)
 .text          0x00000a98        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(eerd_byte_attiny85.o)
 .text          0x00000a98        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(eewr_byte_attiny85.o)
                0x00000a98                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000a98       0x24 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_mulhi3.o)
                0x00000a98                __mulhi3
 .text.libgcc   0x00000abc       0x36 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_divmodsi4.o)
                0x00000abc                __divmodsi4
 .text.libgcc   0x00000af2        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
 .text.libgcc   0x00000af2        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000af2        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000af2       0x44 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_udivmodsi4.o)
                0x00000af2                __udivmodsi4
 .text.avr-libc
                0x00000b36      0x266 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(malloc.o)
                0x00000b36                malloc
                0x00000c6a                free
 .text.avr-libc
                0x00000d9c        0xe /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(strcpy.o)
                0x00000d9c                strcpy
 .text.avr-libc
                0x00000daa       0x10 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(eerd_byte_attiny85.o)
                0x00000daa                __eerd_byte_tn85
 .text.avr-libc
                0x00000dba       0x1c /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(eewr_byte_attiny85.o)
                0x00000dba                __eewr_byte_tn85
                0x00000dbc                __eewr_r18_tn85
                0x00000dd6                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000dd6        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
                0x00000dd6                exit
                0x00000dd6                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000dd6        0x4 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
 *(.fini0)
                0x00000dda                _etext = .

.data           0x00800060       0x2c load address 0x00000dda
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn85.o
 .data          0x00800060        0x0 ./usbdrv/oddebug.o
 .data          0x00800060        0x2 ./usbdrv/usbdrv.o
                0x00800060                usbTxLen
 .data          0x00800062        0x0 ./usbdrv/usbdrvasm.o
 .data          0x00800062       0x23 ./main.o
                0x00800075                dit_speed
 .data          0x00800085        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_mulhi3.o)
 .data          0x00800085        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_divmodsi4.o)
 .data          0x00800085        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
 .data          0x00800085        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_copy_data.o)
 .data          0x00800085        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_clear_bss.o)
 .data          0x00800085        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_udivmodsi4.o)
 .data          0x00800085        0x6 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(malloc.o)
                0x00800085                __malloc_margin
                0x00800087                __malloc_heap_start
                0x00800089                __malloc_heap_end
 .data          0x0080008b        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(strcpy.o)
 .data          0x0080008b        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(eerd_byte_attiny85.o)
 .data          0x0080008b        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(eewr_byte_attiny85.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0080008c                . = ALIGN (0x2)
 *fill*         0x0080008b        0x1 00
                0x0080008c                _edata = .
                0x0080008c                PROVIDE (__data_end, .)

.bss            0x0080008c       0x4c
                0x0080008c                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080008c        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn85.o
 .bss           0x0080008c        0x0 ./usbdrv/oddebug.o
 .bss           0x0080008c        0x2 ./usbdrv/usbdrv.o
 .bss           0x0080008e        0x0 ./usbdrv/usbdrvasm.o
 .bss           0x0080008e       0x11 ./main.o
 .bss           0x0080009f        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_mulhi3.o)
 .bss           0x0080009f        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_divmodsi4.o)
 .bss           0x0080009f        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
 .bss           0x0080009f        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_copy_data.o)
 .bss           0x0080009f        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_clear_bss.o)
 .bss           0x0080009f        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_udivmodsi4.o)
 .bss           0x0080009f        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(malloc.o)
 .bss           0x0080009f        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(strcpy.o)
 .bss           0x0080009f        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(eerd_byte_attiny85.o)
 .bss           0x0080009f        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(eewr_byte_attiny85.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0080009f       0x2a ./usbdrv/usbdrv.o
                0x0080009f                usbTxBuf
                0x008000aa                usbDeviceAddr
                0x008000ab                usbRxToken
                0x008000ac                usbInputBufOffset
                0x008000ad                usbMsgPtr
                0x008000af                usbRxLen
                0x008000b0                usbNewDeviceAddr
                0x008000b1                usbCurrentTok
                0x008000b2                usbConfiguration
                0x008000b3                usbRxBuf
 COMMON         0x008000c9        0xb ./main.o
                0x008000c9                fsk_tune
                0x008000ca                timer
                0x008000ce                dit_length
                0x008000d0                cur_mode
                0x008000d1                next_state
                0x008000d2                tx_on
                0x008000d3                cur_state
 COMMON         0x008000d4        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(malloc.o)
                0x008000d4                __brkval
                0x008000d6                __flp
                0x008000d8                PROVIDE (__bss_end, .)
                0x00000dda                __data_load_start = LOADADDR (.data)
                0x00000e06                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008000d8        0x0
                0x008000d8                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008000d8                PROVIDE (__noinit_end, .)
                0x008000d8                _end = .
                0x008000d8                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x2814
 *(.stab)
 .stab          0x00000000      0x6cc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn85.o
 .stab          0x000006cc      0x3cc ./usbdrv/oddebug.o
                                0x3d8 (size before relaxing)
 .stab          0x00000a98      0xac8 ./usbdrv/usbdrv.o
                                0xd44 (size before relaxing)
 .stab          0x00001560      0x984 ./main.o
                                0xc48 (size before relaxing)
 .stab          0x00001ee4      0x750 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(malloc.o)
                                0x75c (size before relaxing)
 .stab          0x00002634       0x6c /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(strcpy.o)
                                 0x78 (size before relaxing)
 .stab          0x000026a0       0x90 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(eerd_byte_attiny85.o)
                                 0x9c (size before relaxing)
 .stab          0x00002730       0xe4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a(eewr_byte_attiny85.o)
                                 0xf0 (size before relaxing)

.stabstr        0x00000000     0x18c1
 *(.stabstr)
 .stabstr       0x00000000     0x18c1 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn85.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(OpenQRSS.elf elf32-avr)
LOAD linker stubs
